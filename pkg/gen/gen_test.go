package gen_test

import (
	_ "embed"
	"strings"
	"testing"

	"github.com/redcarbon-dev/nats-proto-pubgen/pkg/gen"
	"github.com/stretchr/testify/assert"
)

//go:embed nosend.proto
var noSend string

//go:embed test.proto
var testFile string

func TestNoGenerate(t *testing.T) {
	r := strings.NewReader(noSend)
	s, ok, err := gen.RenderReader(r)
	assert.Nil(t, err)
	assert.Empty(t, s)
	assert.False(t, ok)
}

func TestGenerate(t *testing.T) {
	r := strings.NewReader(testFile)
	s, ok, err := gen.RenderReader(r)
	assert.Nil(t, err)
	assert.True(t, ok)

	expected := `// Code generated by pubgen. DO NOT EDIT.

package pubgen

import (
	"google.golang.org/protobuf/proto"
	pb "test/test"
)

func (p *PubCli) NewOneTest(data *pb.One) error {
	msg, err := proto.Marshal(data)
	if err != nil {
		return err
	}

	return p.publish("test.one", msg)
}

func (p *PubCli) NewTwoTest(data *pb.Second) error {
	msg, err := proto.Marshal(data)
	if err != nil {
		return err
	}

	return p.publish("test.two", msg)
}
`
	assert.Equal(t, expected, s)
}
